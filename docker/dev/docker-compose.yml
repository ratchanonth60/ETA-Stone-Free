version: "3.3"

volumes:
  postgres_data:
  cache:
    external: true

networks:
  web_net:
    driver: bridge
  db_net:
    driver: bridge
  broker_net:
    driver: bridge

x-common-attributes: &common-attributes
  platform: linux/amd64
  env_file: [.env]
  build:
    context: ../../
    dockerfile: docker/Dockerfile
  volumes:
    - ../../.:/application
    - cache:/cache
  environment:
    - DJANGO_SETTINGS_MODULE=eta
  working_dir: /application/src

services:
  django:
    <<: *common-attributes
    container_name: django
    restart: always
    command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
    entrypoint: ["wait-db.sh"]
    ports:
      - "8080:8080"
      - "8000:8000"
    networks:
      - web_net
      - db_net
      - broker_net

  db:
    image: postgres
    container_name: db
    env_file: [.env]
    volumes: [postgres_data:/var/lib/postgresql/data/]
    ports: ["5432:5432"]
    networks: [db_net]

  debug:
    <<: *common-attributes
    container_name: debug
    ports: ["5678:5678"]
    command:
      [
        "python",
        "-m",
        "debugpy",
        "--listen",
        "0.0.0.0:5678",
        "--wait-for-client",
        "-m",
        "pytest",
        "-n 1",
        "--disable-pytest-warnings",
        "ecommerce/apps/customer/tests/test_views.py",
      ]
    networks:
      - broker_net
      - db_net
    profiles: [debug]

  celery:
    <<: *common-attributes
    container_name: celery
    restart: always
    command:
      [
        "python",
        "-m",
        "celery",
        "-A",
        "eta",
        "worker",
        "-l",
        "INFO",
        "--autoscale=10,3",
      ]
    networks:
      - broker_net
      - db_net

  celery-beat:
    <<: *common-attributes
    container_name: celery-beat
    restart: always
    command:
      [
        "python",
        "-m",
        "celery",
        "-A",
        "eta",
        "beat",
        "-l",
        "info",
        "--scheduler",
        "tenant_schemas_celery.scheduler.TenantAwareScheduler",
        "--pidfile=",
      ]
    networks:
      - broker_net
      - db_net
    depends_on:
      - db
      - rabbit

  redis:
    image: redis
    container_name: redis
    ports:
      - "15672:15672"
      - "5672:5672"
    networks: [broker_net]

  rabbit:
    image: rabbitmq
    container_name: rabbit
    hostname: rabbit
    environment:
      - RABBITMQ_DEFAULT_USER=user1
      - RABBITMQ_DEFAULT_PASS=rabbitmq
    networks: [broker_net]
# Uncomment and configure these services if needed
#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.1
#    container_name: elasticsearch
#    environment:
#      - discovery.type=single-node
#    ports: ["9200:9200"]
#    networks: [elk]

#  logstash:
#    image: docker.elastic.co/logstash/logstash:7.15.1
#    container_name: logstash
#    volumes: [./logstash-config:/usr/share/logstash/pipeline]
#    ports: ["5000:5000"]
#    depends_on: [elasticsearch]
#    networks: [elk]

#  kibana:
#    image: docker.elastic.co/kibana/kibana:7.15.1
#    container_name: kibana
#    ports: ["5601:5601"]
#    depends_on: [elasticsearch]
#    networks: [elk]
